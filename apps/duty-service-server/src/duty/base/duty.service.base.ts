/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Duty as PrismaDuty } from "@prisma/client";

export class DutyServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DutyCountArgs, "select">): Promise<number> {
    return this.prisma.duty.count(args);
  }

  async duties(args: Prisma.DutyFindManyArgs): Promise<PrismaDuty[]> {
    return this.prisma.duty.findMany(args);
  }
  async duty(args: Prisma.DutyFindUniqueArgs): Promise<PrismaDuty | null> {
    return this.prisma.duty.findUnique(args);
  }
  async createDuty(args: Prisma.DutyCreateArgs): Promise<PrismaDuty> {
    return this.prisma.duty.create(args);
  }
  async updateDuty(args: Prisma.DutyUpdateArgs): Promise<PrismaDuty> {
    return this.prisma.duty.update(args);
  }
  async deleteDuty(args: Prisma.DutyDeleteArgs): Promise<PrismaDuty> {
    return this.prisma.duty.delete(args);
  }
}
